create table public.feedback_complaints (
  id bigint generated by default as identity primary key,
  created_at timestamp with time zone not null default now(),
  feedback_text text not null,
  status text not null default 'open',
  response_text text,
  closed_at timestamp with time zone,
  closed_by uuid references public.profiles(id)
);

alter table public.feedback_complaints enable row level security;

create policy "Public can insert feedback"
on public.feedback_complaints for insert
with check (true);

create policy "Admins can view all feedback"
on public.feedback_complaints for select
using ( get_user_role(auth.uid()) = ANY (ARRAY['admin'::user_role, 'super-admin'::user_role]) );

create policy "Admins can update feedback"
on public.feedback_complaints for update
using ( get_user_role(auth.uid()) = ANY (ARRAY['admin'::user_role, 'super-admin'::user_role]) );
